const UNIT_VALUE = 20; // VALUE OF ONE UNIT OF LENGTH IN CM
const MINPOS = 0; // MIN VALUE OF XYZ
const MAXPOS = 5; // MAX VALUE OF XYZ

// MIN HEIGHT,WIDTH,DEPTH
const MINLEN = 0.3;
// MAX HEIGHT,WIDTH,DEPTH
const MAXLEN = 5;

//NUMBER OF PHENOTYPES IN INITIAL POPULATION
const INITIAL_POPULATION_SIZE = 20;
//NUMBER OF CUBOIDS IN EACH OF THE PHENOTYPES
const PRIMITIVES = 4;

//WEIGTHS AND IDEAL VALUES
const IDEAL_MASS = 150; // KG
const MASS_WEIGHT = 4;

const IDEAL_SIZE = 150;
const SIZE_WEIGHT = 2;

const IS_DISCONNECTED = 0.3; // PUNISHMENT FOR DISCONNECTED DESIGN
const IS_DISCONNECTED_WEIGHT = 1;

const IDEAL_TABLE_HEIGHT = 4; // IDEAL PLACEMENT
const TABLE_HEIGHT_WEIGHT = 1;

const IDEAL_CENTER_OF_MASS = 0;
const CENTER_OF_MASS_WEIGHT = 5;

const IDEAL_COUNTER_AREA = 10000;
const COUNTER_AREA_WEIGHT = 6;

const NUM_OF_GENERATIONS = 100;

const MAXIMUM_SCORE =
  COUNTER_AREA_WEIGHT +
  CENTER_OF_MASS_WEIGHT +
  TABLE_HEIGHT_WEIGHT +
  SIZE_WEIGHT +
  MASS_WEIGHT +
  IS_DISCONNECTED_WEIGHT;

const EDGES = [
  [0, 1],
  [1, 2],
  [2, 3],
  [3, 0],
  [4, 5],
  [5, 6],
  [6, 7],
  [7, 4],
  [3, 4],
  [2, 5],
  [0, 7],
  [1, 6],
];

const FACES = [
  [0, 1, 2, 3], // front
  [4, 5, 6, 7], // back
  [3, 2, 5, 4], // right
  [7, 6, 1, 0], // left
  [7, 0, 3, 4], // top
  [5, 2, 1, 6], // bottom
];

export {
  INITIAL_POPULATION_SIZE,
  PRIMITIVES,
  IDEAL_MASS,
  IDEAL_SIZE,
  EDGES,
  FACES,
  IDEAL_TABLE_HEIGHT,
  IS_DISCONNECTED,
  IDEAL_COUNTER_AREA,
  MINPOS,
  MAXPOS,
  MINLEN,
  MAXLEN,
  UNIT_VALUE,
  MASS_WEIGHT,
  SIZE_WEIGHT,
  IS_DISCONNECTED_WEIGHT,
  TABLE_HEIGHT_WEIGHT,
  IDEAL_CENTER_OF_MASS,
  CENTER_OF_MASS_WEIGHT,
  COUNTER_AREA_WEIGHT,
  MAXIMUM_SCORE,
};
